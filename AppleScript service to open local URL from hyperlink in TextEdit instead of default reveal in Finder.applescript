-- This script, as part of an Automator service, opens a local URL (to a file or folder) from a hyperlink in TextEdit. TextEdit's default behavior when clicking on a file:/// hyperlink to a local URL is either (1) to bring the file's window to the front if the file has already been opened in the current TextEdit session or else (2) to reveal the file or folder in the Finder. Using this script as a service provides a third option: right-click (or control-click) on the link and then select the service from the pop-up/contextual services menu to open the file or folder directly. Or assign a keyboard shortcut to the service, then right-click (or control-click) on the link, press the escape key, and press the keyboard shortcut to open the file or folder directly. This service works because when you click on a hyperlink in TextEdit, TextEdit selects the link's text area, which then can be passed to the clipboard via the service. This will, of course, destroy what was already on the clipboard. The script could be modified to save the clipboard content to a variable first and then restore the previous clipboard at the end of the script, but I found this simpler clipboard-destroying script to be faster and more reliable.
-- To create a service from this script: open Automator; create a new service; set the service to receive rich text in TextEdit; add the "Copy to Clipboard" action to the workflow; add the "Run AppleScript" action to the workflow; select the "Ignore this action's input" checkbox in the "Run AppleScript" action; replace the content of the "Run AppleScript" action with this script (and replace the path to python3 in the script with the path on your machine); save the service.

set the_path to (do shell script "LANG=en_US.UTF-8 osascript -l AppleScript -e 'the clipboard as \"RTF \"' | perl -ne 'print chr foreach unpack(\"C*\",pack(\"H*\",substr($_,11,-3)))' | /usr/bin/textutil -inputencoding utf-8 -stdin -stdout -format rtf -convert html | grep -o 'file:///[^\"]*' | /opt/local/bin/python3 -c \"import sys; from urllib.parse import unquote; print(unquote(sys.stdin.read()));\" | perl -pe 's/^file:\\/\\///g;' -pe 'chomp'")
-- to extract the POSIX path, gets the clipboard as hex-encoded RTF from AppleScript since "pbpaste -Prefer rtf" never returns RTF as it should; then uses a perl command from https://stackoverflow.com/a/2548429 to transform AppleScript output to (non-hex-encoded) raw RTF; then uses textutil to transform RTF to HTML; then uses grep to extract the local URL; the uses a python command from https://stackoverflow.com/a/21693459 to decode the URL encoding; then uses perl to remove the "file://" prefix and the trailing newline characters
try
	set file_alias to POSIX file the_path as alias -- will fail silently if file does not exist
	do shell script "open " & quoted form of the_path
end try
